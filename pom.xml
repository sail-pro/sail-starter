<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.github.sail-pro</groupId>
        <artifactId>sail-starter-dependencies</artifactId>
        <version>${revision}</version>
        <relativePath>./sail-starter-dependencies</relativePath>
    </parent>

    <artifactId>sail-starter</artifactId>
    <packaging>pom</packaging>
    <version>${revision}</version>
    <name>sail starter</name>

    <url>https://github.com/sail-pro/sail-spring-boot3-starter</url>
    <description>
        基于spring “约定优于配置” 的理念自定义springboot3.x starter
    </description>

    <!--开源协议-->
    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <!--版本控制-->
    <scm>
        <url>https://github.com/sail-pro/sail-spring-boot3-starter/tree/main</url>
        <connection>scm:git:https://github.com/sail-pro/sail-spring-boot3-starter.git</connection>
        <developerConnection>scm:git:https://github.com/sail-pro/sail-spring-boot3-starter.git</developerConnection>
    </scm>

    <!--开发者信息-->
    <developers>
        <developer>
            <name>孤云帆</name>
            <email>LonelyCloudSail@gmail.com</email>
        </developer>
    </developers>

    <modules>
        <module>sail-starter-dependencies</module>
        <module>sail-starter-cache</module>
        <module>sail-starter-web</module>
        <module>sail-starter-core</module>
    </modules>

    <properties>
        <java.version>21</java.version>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <plugins>
            <!-- maven编译插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <!-- maven Source插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- maven Javadoc插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.plugin}</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- gpg插件 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>${maven.gpg.plugin}</version>
                <configuration>
                    <!-- 改成你自己的路径 -->
                    <executable>/opt/homebrew/bin/gpg</executable>
                </configuration>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- 发布插件 -->
            <plugin>
                <groupId>org.sonatype.central</groupId>
                <artifactId>central-publishing-maven-plugin</artifactId>
                <version>${central.publishing.maven.plugin}</version>
                <extensions>true</extensions>
                <configuration>
                    <publishingServerId>central</publishingServerId>
                    <!--<tokenAuth>true</tokenAuth>-->
                    <!-- 若要自动发布，添加以下配置 -->
                    <!--<autoPublish>true</autoPublish>-->
                    <!-- 一直等到发布完成 -->
                    <!--<waitUntil>published</waitUntil>-->
                </configuration>
            </plugin>
            <!-- 统一版本号插件 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>flatten-clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>
</project>